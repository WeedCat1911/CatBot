"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Artist {
    main;
    id;
    name;
    updated_at;
    is_active;
    other_names;
    group_name;
    linked_user_id;
    created_at;
    is_banned;
    creator_id;
    is_locked;
    notes;
    domains;
    urls;
    constructor(main, info) {
        Object.assign(this, info);
        Object.defineProperty(this, "main", {
            value: main,
            configurable: false,
            enumerable: false,
            writable: false
        });
    }
    /**
     * modify an artist
     *
     * * Requires Authentication
     *
     * @param {object} options
     * @param {string} [options.name] - the name of artist (requires janitor)
     * @param {number} [options.linked_user_id] - the id of the user associated with this artist (requires janitor)
     * @param {boolean} [options.locked] - if the artist should be locked (requires janitor)
     * @param {(Array<string> | string)} [options.other_names] - the other names for this artist
     * @param {string} [options.group_name] - the group name of this artist
     * @param {(Array<string> | string)} [options.urls] - the urls associated with this artist
     * @param {string} [options.notes] - notes for this artist
     * @returns {Promise<Artist>}
     */
    async modify(options) {
        this.main.request.authCheck("Artist#modify");
        if (!options)
            throw new Error("options is required in Artist#modify");
        return this.main.artists.modify.call(this.main.artists, this.id, options);
    }
}
exports.default = Artist;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXJ0aXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0cnVjdHVyZXMvQXJ0aXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBR0EsTUFBcUIsTUFBTTtJQUNsQixJQUFJLENBQU87SUFDbkIsRUFBRSxDQUFTO0lBQ1gsSUFBSSxDQUFTO0lBQ2IsVUFBVSxDQUFTO0lBQ25CLFNBQVMsQ0FBVTtJQUNuQixXQUFXLENBQWdCO0lBQzNCLFVBQVUsQ0FBUztJQUNuQixjQUFjLENBQWdCO0lBQzlCLFVBQVUsQ0FBUztJQUNuQixTQUFTLENBQVU7SUFDbkIsVUFBVSxDQUFTO0lBQ25CLFNBQVMsQ0FBVTtJQUNuQixLQUFLLENBQWdCO0lBQ3JCLE9BQU8sQ0FBZ0I7SUFDdkIsSUFBSSxDQUFtQjtJQUN2QixZQUFZLElBQVUsRUFBRSxJQUFzQjtRQUM3QyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMxQixNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUU7WUFDbkMsS0FBSyxFQUFTLElBQUk7WUFDbEIsWUFBWSxFQUFFLEtBQUs7WUFDbkIsVUFBVSxFQUFJLEtBQUs7WUFDbkIsUUFBUSxFQUFNLEtBQUs7U0FDbkIsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUdEOzs7Ozs7Ozs7Ozs7OztPQWNHO0lBQ0gsS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUE0QjtRQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLE9BQU87WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNDQUFzQyxDQUFDLENBQUM7UUFDdEUsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDM0UsQ0FBQztDQUNEO0FBL0NELHlCQStDQyJ9