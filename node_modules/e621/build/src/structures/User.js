"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class User {
    main;
    wiki_page_version_count;
    artist_version_count;
    pool_version_count;
    forum_post_count;
    comment_count;
    appeal_count;
    flag_count;
    positive_feedback_count;
    neutral_feedback_count;
    negative_feedback_count;
    upload_limit;
    id;
    created_at;
    name;
    level;
    base_upload_limit;
    post_upload_count;
    post_update_count;
    note_update_count;
    is_banned;
    can_approve_posts;
    can_upload_free;
    level_string;
    avatar_id;
    constructor(main, info) {
        Object.assign(this, info);
        Object.defineProperty(this, "main", {
            value: main,
            configurable: false,
            enumerable: false,
            writable: false
        });
    }
    /**
     * Get the feedback associated with this user
     *
     * @param {object} [options] - Options for narrowing the search
     * @param {string} [options.creator] - the creator of the feedback
     * @param {string} [options.body] - the body of the feedback
     * @param {FeedbackCategories} [options.category] - the type of feedback
     * @param {number} [options.limit] - the maximum amount of feedback to fetch
     * @returns {Array<UserFeedbackProperties>}
     */
    async getFeedback(options) { return this.main.userFeedback.search.call(this.main.userFeedback, { username: this.name, ...options }); }
    /**
     * Create a feedback for this user
     *
     * * Requires Authentication
     *
     * * Requires Moderator
     *
     * @param {object} options
     * @param {FeedbackCategories} options.category - the type of feedback
     * @param {string} options.body - the body of the feedback
     * @returns
     */
    async createFeedback(options) {
        this.main.request.authCheck.call(this, "User#createFeedback");
        return this.main.userFeedback.create.call(this.main.userFeedback, { username: this.name, ...options });
    }
    /**
     * Get this users favorites
     *
     * @returns {Promise<Array<Post>>}
     */
    async getFavorites() { return this.main.users.getFavorites(this.id); }
    async asAuthenticatedUser() {
        this.main.request.authCheck("User#asAuthenticatedUser");
        const info = await this.main.users.getSelf.call(this.main.users);
        if (info.id !== this.id)
            throw new Error("User#asAuthenticatedUser called on a different user");
        return info;
    }
}
exports.default = User;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdHJ1Y3R1cmVzL1VzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFVQSxNQUFxQixJQUFJO0lBQ0wsSUFBSSxDQUFPO0lBQzlCLHVCQUF1QixDQUFTO0lBQ2hDLG9CQUFvQixDQUFTO0lBQzdCLGtCQUFrQixDQUFTO0lBQzNCLGdCQUFnQixDQUFTO0lBQ3pCLGFBQWEsQ0FBUztJQUN0QixZQUFZLENBQVM7SUFDckIsVUFBVSxDQUFTO0lBQ25CLHVCQUF1QixDQUFTO0lBQ2hDLHNCQUFzQixDQUFTO0lBQy9CLHVCQUF1QixDQUFTO0lBQ2hDLFlBQVksQ0FBUztJQUNyQixFQUFFLENBQVM7SUFDWCxVQUFVLENBQVM7SUFDbkIsSUFBSSxDQUFTO0lBQ2IsS0FBSyxDQUFTO0lBQ2QsaUJBQWlCLENBQVM7SUFDMUIsaUJBQWlCLENBQVM7SUFDMUIsaUJBQWlCLENBQVM7SUFDMUIsaUJBQWlCLENBQVM7SUFDMUIsU0FBUyxDQUFVO0lBQ25CLGlCQUFpQixDQUFVO0lBQzNCLGVBQWUsQ0FBVTtJQUN6QixZQUFZLENBQVM7SUFDckIsU0FBUyxDQUFnQjtJQUN6QixZQUFZLElBQVUsRUFBRSxJQUFvQjtRQUMzQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMxQixNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUU7WUFDbkMsS0FBSyxFQUFTLElBQUk7WUFDbEIsWUFBWSxFQUFFLEtBQUs7WUFDbkIsVUFBVSxFQUFJLEtBQUs7WUFDbkIsUUFBUSxFQUFNLEtBQUs7U0FDbkIsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUVEOzs7Ozs7Ozs7T0FTRztJQUNILEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBb0QsSUFBSSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxHQUFHLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRW5MOzs7Ozs7Ozs7OztPQVdHO0lBQ0gsS0FBSyxDQUFDLGNBQWMsQ0FBQyxPQUFvRDtRQUN4RSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxxQkFBcUIsQ0FBQyxDQUFDO1FBQzlELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLEdBQUcsT0FBTyxFQUFFLENBQUMsQ0FBQztJQUN4RyxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILEtBQUssQ0FBQyxZQUFZLEtBQUssT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUV0RSxLQUFLLENBQUMsbUJBQW1CO1FBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1FBQ3hELE1BQU0sSUFBSSxHQUFHLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2pFLElBQUksSUFBSSxDQUFDLEVBQUUsS0FBSyxJQUFJLENBQUMsRUFBRTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMscURBQXFELENBQUMsQ0FBQztRQUNoRyxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7Q0FDRDtBQTlFRCx1QkE4RUMifQ==