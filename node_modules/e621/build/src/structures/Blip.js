"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Blip {
    main;
    id;
    creator_id;
    creator_name;
    body;
    response_to;
    created_at;
    updated_at;
    is_hidden;
    /** the type of warning shown on this blip - 1 = warning - 2 = record - 3 = ban */
    warning_type;
    /** the user that created the warning present on the blip  */
    warning_user_id;
    constructor(main, info) {
        Object.assign(this, info);
        Object.defineProperty(this, "main", {
            value: main,
            configurable: false,
            enumerable: false,
            writable: false
        });
    }
    /**
     * Get the creator of this note
     *
     * @returns {Promise<User | null>}
     */
    async getCreator() { return this.creator_id === null ? null : this.main.users.get.call(this.main.users, this.creator_id); }
    /**
     * Get the blip this one responded to
     *
     * @returns {Promise<Blip | null>}
     */
    async getResponseTo() { return this.response_to === null ? null : this.main.blips.get.call(this.main.blips, this.response_to); }
    /**
     * modify a blip
     *
     * * Requires Authentication
     *
     * * Requires Moderator if not created by self
     *
     * * blips older than 5 minutes cannot be edited (does not apply if moderator)
     *
     * @param {object} options
     * @param {string} options.body - the body content of the blip
     * @returns {Promise<Blip>}
     */
    async modify(options) {
        this.main.request.authCheck.call(this, "Blip#modify");
        if (!options)
            throw new Error("options is required in Blip#modify");
    }
    /**
     * Delete this blip
     *
     * * Requires Authentication
     *
     * * Requires Moderator
     *
     * @returns {Promise<null>}
     */
    async delete() {
        this.main.request.authCheck.call(this, "Blips#delete");
        return this.main.blips.delete.call(this.main.blips, this.id);
    }
    /**
     * Add a warning to a blip
     *
     * * Requires Authentication
     *
     * * Requires Moderator
     *
     * @param {BlipWarningType} type - the type of warning to display
     * @returns {Promise<Blip>}
     */
    async addWarning(type) {
        this.main.request.authCheck.call(this, "Blip#addWarning");
        return this.main.blips.addWarning.call(this.main.blips, this.id, type);
    }
}
exports.default = Blip;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmxpcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdHJ1Y3R1cmVzL0JsaXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFJQSxNQUFxQixJQUFJO0lBQ2hCLElBQUksQ0FBTztJQUNuQixFQUFFLENBQVM7SUFDWCxVQUFVLENBQVM7SUFDbkIsWUFBWSxDQUFTO0lBQ3JCLElBQUksQ0FBUztJQUNiLFdBQVcsQ0FBZ0I7SUFDM0IsVUFBVSxDQUFTO0lBQ25CLFVBQVUsQ0FBUztJQUNuQixTQUFTLENBQVU7SUFDbkIsa0ZBQWtGO0lBQ2xGLFlBQVksQ0FBWTtJQUN4Qiw2REFBNkQ7SUFDN0QsZUFBZSxDQUFnQjtJQUMvQixZQUFZLElBQVUsRUFBRSxJQUFvQjtRQUMzQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMxQixNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUU7WUFDbkMsS0FBSyxFQUFTLElBQUk7WUFDbEIsWUFBWSxFQUFFLEtBQUs7WUFDbkIsVUFBVSxFQUFJLEtBQUs7WUFDbkIsUUFBUSxFQUFNLEtBQUs7U0FDbkIsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxLQUFLLENBQUMsVUFBVSxLQUFLLE9BQU8sSUFBSSxDQUFDLFVBQVUsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRTNIOzs7O09BSUc7SUFDSCxLQUFLLENBQUMsYUFBYSxLQUFLLE9BQU8sSUFBSSxDQUFDLFdBQVcsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2hJOzs7Ozs7Ozs7Ozs7T0FZRztJQUNILEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBMEI7UUFDdEMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsYUFBYSxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLE9BQU87WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7SUFDckUsQ0FBQztJQUNEOzs7Ozs7OztPQVFHO0lBQ0gsS0FBSyxDQUFDLE1BQU07UUFDWCxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsQ0FBQztRQUN2RCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFRDs7Ozs7Ozs7O09BU0c7SUFDSCxLQUFLLENBQUMsVUFBVSxDQUFDLElBQXFCO1FBQ3JDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLGlCQUFpQixDQUFDLENBQUM7UUFDMUQsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDeEUsQ0FBQztDQUNEO0FBbEZELHVCQWtGQyJ9