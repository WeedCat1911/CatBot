import type { BlipProperties, BlipWarningType, ModifyBlipOptions } from "../types";
import type E621 from "..";
import type { User } from "..";
export default class Blip implements BlipProperties {
    private main;
    id: number;
    creator_id: number;
    creator_name: string;
    body: string;
    response_to: number | null;
    created_at: string;
    updated_at: string;
    is_hidden: boolean;
    /** the type of warning shown on this blip - 1 = warning - 2 = record - 3 = ban */
    warning_type: 1 | 2 | 3;
    /** the user that created the warning present on the blip  */
    warning_user_id: number | null;
    constructor(main: E621, info: BlipProperties);
    /**
     * Get the creator of this note
     *
     * @returns {Promise<User | null>}
     */
    getCreator(): Promise<User | null>;
    /**
     * Get the blip this one responded to
     *
     * @returns {Promise<Blip | null>}
     */
    getResponseTo(): Promise<Blip | null>;
    /**
     * modify a blip
     *
     * * Requires Authentication
     *
     * * Requires Moderator if not created by self
     *
     * * blips older than 5 minutes cannot be edited (does not apply if moderator)
     *
     * @param {object} options
     * @param {string} options.body - the body content of the blip
     * @returns {Promise<Blip>}
     */
    modify(options: ModifyBlipOptions): Promise<void>;
    /**
     * Delete this blip
     *
     * * Requires Authentication
     *
     * * Requires Moderator
     *
     * @returns {Promise<null>}
     */
    delete(): Promise<null>;
    /**
     * Add a warning to a blip
     *
     * * Requires Authentication
     *
     * * Requires Moderator
     *
     * @param {BlipWarningType} type - the type of warning to display
     * @returns {Promise<Blip>}
     */
    addWarning(type: BlipWarningType): Promise<Blip>;
}
