"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class PostHistory {
    main;
    id;
    post_id;
    tags;
    updater_id;
    updater_name;
    updated_at;
    rating;
    parent_id;
    source;
    description;
    reason;
    locked_tags;
    added_tags;
    removed_tags;
    added_locked_tags;
    removed_locked_tags;
    rating_changed;
    parent_changed;
    source_changed;
    description_changed;
    version;
    obsolete_added_tags;
    obsolete_removed_tags;
    unchanged_tags;
    extra;
    constructor(main, info) {
        Object.assign(this, info);
        Object.defineProperty(this, "main", {
            value: main,
            configurable: false,
            enumerable: false,
            writable: false
        });
        this.extra = {
            get tags() { return info.tags.split(" ").filter(Boolean); },
            get locked_tags() { return (info.locked_tags || "").split(" "); },
            get added_tags() { return (info.added_tags || []).filter(Boolean); },
            get removed_tags() { return (info.removed_tags || []).filter(Boolean); },
            get added_locked_tags() { return (info.added_locked_tags || []).filter(Boolean); },
            get removed_locked_tags() { return (info.added_locked_tags || []).filter(Boolean); },
            get obsolete_added_tags() { return (info.obsolete_added_tags || "").split(" ").filter(Boolean); },
            get obsolete_removed_tags() { return (info.obsolete_removed_tags || "").split(" ").filter(Boolean); },
            get unchanged_tags() { return (info.unchanged_tags || "").split(" ").filter(Boolean); },
            get sources() { return (info.source || "").split("\n").filter(Boolean); },
            // convinence method
            get old_rating() {
                if (!info.rating_changed)
                    return null;
                const r = this.removed_tags.find(t => t.startsWith("rating:"));
                return !r ? null : r.replace(/rating:/, "");
            },
            // convinence method
            get new_rating() {
                if (!info.rating_changed)
                    return null;
                const r = this.added_tags.find(t => t.startsWith("rating:"));
                return !r ? null : r.replace(/rating:/, "");
            },
            // convinence method
            get added_sources() { return (this.added_tags.find(t => t.startsWith("source:"))?.replace(/source:/, "") ?? "").split("\n"); },
            // convinence method
            get removed_sources() { return (this.removed_tags.find(t => t.startsWith("source:"))?.replace(/source:/, "") ?? "").split("\n"); }
        };
    }
    /**
     * Get the updater for this history
     *
     * @returns {Promise<User | null>}
     */
    async getUpdater() { return this.updater_id === null ? null : this.main.users.get.call(this.main.users, this.updater_id); }
    /**
     * Get the post object for this history
     *
     * @returns {Promise<Post | null>}
     */
    async getPost() { return this.main.posts.get.call(this.main.posts, this.post_id); }
    /**
     * Revert the post to this version
     *
     * * Requires Authentication
     *
     */
    async revertTo() {
        this.main.request.authCheck("PostHistory#revertTo");
        return this.main.posts.revert.call(this.main.posts, this.post_id, this.id);
    }
}
exports.default = PostHistory;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9zdEhpc3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc3RydWN0dXJlcy9Qb3N0SGlzdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUtBLE1BQXFCLFdBQVc7SUFDdkIsSUFBSSxDQUFPO0lBQ25CLEVBQUUsQ0FBUztJQUNYLE9BQU8sQ0FBUztJQUNoQixJQUFJLENBQVM7SUFDYixVQUFVLENBQWdCO0lBQzFCLFlBQVksQ0FBUztJQUNyQixVQUFVLENBQVM7SUFDbkIsTUFBTSxDQUFpQjtJQUN2QixTQUFTLENBQWdCO0lBQ3pCLE1BQU0sQ0FBZ0I7SUFDdEIsV0FBVyxDQUFnQjtJQUMzQixNQUFNLENBQWdCO0lBQ3RCLFdBQVcsQ0FBZ0I7SUFDM0IsVUFBVSxDQUFnQjtJQUMxQixZQUFZLENBQWdCO0lBQzVCLGlCQUFpQixDQUFnQjtJQUNqQyxtQkFBbUIsQ0FBZ0I7SUFDbkMsY0FBYyxDQUFVO0lBQ3hCLGNBQWMsQ0FBVTtJQUN4QixjQUFjLENBQVU7SUFDeEIsbUJBQW1CLENBQVU7SUFDN0IsT0FBTyxDQUFTO0lBQ2hCLG1CQUFtQixDQUFTO0lBQzVCLHFCQUFxQixDQUFTO0lBQzlCLGNBQWMsQ0FBUztJQUN2QixLQUFLLENBS2lFO0lBQ3RFLFlBQVksSUFBVSxFQUFFLElBQTJCO1FBQ2xELE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzFCLE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRTtZQUNuQyxLQUFLLEVBQVMsSUFBSTtZQUNsQixZQUFZLEVBQUUsS0FBSztZQUNuQixVQUFVLEVBQUksS0FBSztZQUNuQixRQUFRLEVBQU0sS0FBSztTQUNuQixDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsS0FBSyxHQUFHO1lBQ1osSUFBSSxJQUFJLEtBQUssT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FB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