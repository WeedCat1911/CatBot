import type Post from "./Post";
import type User from "./User";
import type { PostSetProperties, ModifyPostSetOptions } from "../types";
import type E621 from "..";
export default class PostSet implements PostSetProperties {
    private main;
    id: number;
    name: string;
    shortname: string;
    description: string;
    is_public: boolean;
    transfer_on_delete: boolean;
    creator_id: number;
    post_ids: Array<number>;
    post_count: number;
    created_at: string;
    updated_at: string;
    constructor(main: E621, info: PostSetProperties);
    /**
     * Get the post objects for the posts in this set
     *
     * @returns {Promise<Array<Post>>}
     */
    getPosts(): Promise<Post[]>;
    /**
     * Get the user object of the creator of this set
     *
     * @returns {Promise<User | null>}
     */
    getCreator(): Promise<User | null>;
    /**
     * Add a post to this set
     *
     * * Requires Authentication
     *
     * @param {number} id - the id of the post to add
     * @returns {Promise<PostSet>}
     */
    addPost(id: number): Promise<PostSet>;
    /**
     * Remove a post from this set
     *
     * * Requires Authentication
     *
     * @param {number} id - the id of the post to remove
     * @returns {Promise<PostSet>}
     */
    removePost(id: number): Promise<PostSet>;
    /**
     * modify this set
     *
     * * Requires Authentication
     *
     * @param {object} options
     * @param {string} [options.name] - the name of the set
     * @param {string} [options.shortname] - the short name of the set
     * @param {string} [options.escription] - the description of the set
     * @param {boolean} [options.active] - if the set is public
     * @param {boolean} [options.transfer_on_deletion] - if deleted posts should be replaced with parents
     * @returns {Promise<PostSet>}
     */
    modify(options: ModifyPostSetOptions): Promise<PostSet>;
    /**
     * Delete this set
     *
     * * Requires Authentication
     *
     * @returns {Promise<null>}
     */
    delete(): Promise<null>;
}
